"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionCategoryNotFoundFault = exports.SubscriptionAlreadyExistFault = exports.SNSTopicArnNotFoundFault = exports.SNSNoAuthorizationFault = exports.SNSInvalidTopicFault = exports.EventSubscriptionQuotaExceededFault = exports.DBSubnetQuotaExceededFault = exports.DBSubnetGroupQuotaExceededFault = exports.DBSubnetGroupAlreadyExistsFault = exports.StorageTypeNotSupportedFault = exports.ProvisionedIopsNotAvailableInAZFault = exports.OptionGroupNotFoundFault = exports.InsufficientDBInstanceCapacityFault = exports.InstanceQuotaExceededFault = exports.DomainNotFoundFault = exports.DBSecurityGroupNotFoundFault = exports.DBInstanceAlreadyExistsFault = exports.AuthorizationNotFoundFault = exports.DBClusterEndpointQuotaExceededFault = exports.DBClusterEndpointAlreadyExistsFault = exports.StorageQuotaExceededFault = exports.InvalidVPCNetworkStateFault = exports.InvalidSubnet = exports.InvalidGlobalClusterStateFault = exports.InvalidDBSubnetGroupStateFault = exports.InvalidDBInstanceStateFault = exports.InsufficientStorageClusterCapacityFault = exports.GlobalClusterNotFoundFault = exports.DBSubnetGroupNotFoundFault = exports.DBSubnetGroupDoesNotCoverEnoughAZs = exports.DBClusterQuotaExceededFault = exports.DBClusterParameterGroupNotFoundFault = exports.DBClusterAlreadyExistsFault = exports.SnapshotQuotaExceededFault = exports.KMSKeyNotAccessibleFault = exports.InvalidDBClusterSnapshotStateFault = exports.DBClusterSnapshotNotFoundFault = exports.DBClusterSnapshotAlreadyExistsFault = exports.DBParameterGroupQuotaExceededFault = exports.DBParameterGroupNotFoundFault = exports.DBParameterGroupAlreadyExistsFault = exports.ResourceNotFoundFault = exports.DBSnapshotNotFoundFault = exports.DBInstanceNotFoundFault = exports.SubscriptionNotFoundFault = exports.SourceNotFoundFault = exports.InvalidDBClusterStateFault = exports.DBClusterRoleQuotaExceededFault = exports.DBClusterRoleAlreadyExistsFault = exports.DBClusterNotFoundFault = void 0;
exports.CreateDBInstanceMessageFilterSensitiveLog = exports.CreateDBClusterSnapshotResultFilterSensitiveLog = exports.CreateDBClusterSnapshotMessageFilterSensitiveLog = exports.CreateDBClusterParameterGroupResultFilterSensitiveLog = exports.CreateDBClusterParameterGroupMessageFilterSensitiveLog = exports.CreateDBClusterEndpointOutputFilterSensitiveLog = exports.CreateDBClusterEndpointMessageFilterSensitiveLog = exports.CreateDBClusterResultFilterSensitiveLog = exports.DBClusterFilterSensitiveLog = exports.VpcSecurityGroupMembershipFilterSensitiveLog = exports.DBClusterOptionGroupStatusFilterSensitiveLog = exports.DBClusterMemberFilterSensitiveLog = exports.DBClusterRoleFilterSensitiveLog = exports.CreateDBClusterMessageFilterSensitiveLog = exports.CopyDBParameterGroupResultFilterSensitiveLog = exports.DBParameterGroupFilterSensitiveLog = exports.CopyDBParameterGroupMessageFilterSensitiveLog = exports.CopyDBClusterSnapshotResultFilterSensitiveLog = exports.DBClusterSnapshotFilterSensitiveLog = exports.CopyDBClusterSnapshotMessageFilterSensitiveLog = exports.CopyDBClusterParameterGroupResultFilterSensitiveLog = exports.DBClusterParameterGroupFilterSensitiveLog = exports.CopyDBClusterParameterGroupMessageFilterSensitiveLog = exports.ApplyPendingMaintenanceActionResultFilterSensitiveLog = exports.ResourcePendingMaintenanceActionsFilterSensitiveLog = exports.PendingMaintenanceActionFilterSensitiveLog = exports.ApplyPendingMaintenanceActionMessageFilterSensitiveLog = exports.AddTagsToResourceMessageFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.AddSourceIdentifierToSubscriptionResultFilterSensitiveLog = exports.EventSubscriptionFilterSensitiveLog = exports.AddSourceIdentifierToSubscriptionMessageFilterSensitiveLog = exports.AddRoleToDBClusterMessageFilterSensitiveLog = exports.InvalidRestoreFault = exports.InvalidDBSnapshotStateFault = exports.InsufficientDBClusterCapacityFault = exports.DBClusterRoleNotFoundFault = exports.SubnetAlreadyInUse = exports.DBUpgradeDependencyFailureFault = exports.CertificateNotFoundFault = exports.SharedSnapshotQuotaExceededFault = exports.InvalidDBSecurityGroupStateFault = exports.InvalidEventSubscriptionStateFault = exports.InvalidDBSubnetStateFault = exports.DBSnapshotAlreadyExistsFault = exports.InvalidDBParameterGroupStateFault = exports.InvalidDBClusterEndpointStateFault = exports.DBClusterEndpointNotFoundFault = exports.GlobalClusterQuotaExceededFault = exports.GlobalClusterAlreadyExistsFault = void 0;
exports.DescribeDBClusterSnapshotAttributesMessageFilterSensitiveLog = exports.DescribeDBClustersMessageFilterSensitiveLog = exports.DBClusterMessageFilterSensitiveLog = exports.DescribeDBClusterParametersMessageFilterSensitiveLog = exports.DBClusterParameterGroupDetailsFilterSensitiveLog = exports.ParameterFilterSensitiveLog = exports.DescribeDBClusterParameterGroupsMessageFilterSensitiveLog = exports.DBClusterParameterGroupsMessageFilterSensitiveLog = exports.DescribeDBClusterEndpointsMessageFilterSensitiveLog = exports.FilterFilterSensitiveLog = exports.DBClusterEndpointMessageFilterSensitiveLog = exports.DBClusterEndpointFilterSensitiveLog = exports.DeleteGlobalClusterResultFilterSensitiveLog = exports.DeleteGlobalClusterMessageFilterSensitiveLog = exports.DeleteEventSubscriptionResultFilterSensitiveLog = exports.DeleteEventSubscriptionMessageFilterSensitiveLog = exports.DeleteDBSubnetGroupMessageFilterSensitiveLog = exports.DeleteDBParameterGroupMessageFilterSensitiveLog = exports.DeleteDBInstanceResultFilterSensitiveLog = exports.DeleteDBInstanceMessageFilterSensitiveLog = exports.DeleteDBClusterSnapshotResultFilterSensitiveLog = exports.DeleteDBClusterSnapshotMessageFilterSensitiveLog = exports.DeleteDBClusterParameterGroupMessageFilterSensitiveLog = exports.DeleteDBClusterEndpointOutputFilterSensitiveLog = exports.DeleteDBClusterEndpointMessageFilterSensitiveLog = exports.DeleteDBClusterResultFilterSensitiveLog = exports.DeleteDBClusterMessageFilterSensitiveLog = exports.CreateGlobalClusterResultFilterSensitiveLog = exports.GlobalClusterFilterSensitiveLog = exports.GlobalClusterMemberFilterSensitiveLog = exports.CreateGlobalClusterMessageFilterSensitiveLog = exports.CreateEventSubscriptionResultFilterSensitiveLog = exports.CreateEventSubscriptionMessageFilterSensitiveLog = exports.CreateDBSubnetGroupResultFilterSensitiveLog = exports.CreateDBSubnetGroupMessageFilterSensitiveLog = exports.CreateDBParameterGroupResultFilterSensitiveLog = exports.CreateDBParameterGroupMessageFilterSensitiveLog = exports.CreateDBInstanceResultFilterSensitiveLog = exports.DBInstanceFilterSensitiveLog = exports.DBInstanceStatusInfoFilterSensitiveLog = exports.PendingModifiedValuesFilterSensitiveLog = exports.PendingCloudwatchLogsExportsFilterSensitiveLog = exports.OptionGroupMembershipFilterSensitiveLog = exports.EndpointFilterSensitiveLog = exports.DomainMembershipFilterSensitiveLog = exports.DBSubnetGroupFilterSensitiveLog = exports.SubnetFilterSensitiveLog = exports.AvailabilityZoneFilterSensitiveLog = exports.DBSecurityGroupMembershipFilterSensitiveLog = exports.DBParameterGroupStatusFilterSensitiveLog = void 0;
exports.ListTagsForResourceMessageFilterSensitiveLog = exports.FailoverGlobalClusterResultFilterSensitiveLog = exports.FailoverGlobalClusterMessageFilterSensitiveLog = exports.FailoverDBClusterResultFilterSensitiveLog = exports.FailoverDBClusterMessageFilterSensitiveLog = exports.DescribeValidDBInstanceModificationsResultFilterSensitiveLog = exports.ValidDBInstanceModificationsMessageFilterSensitiveLog = exports.ValidStorageOptionsFilterSensitiveLog = exports.RangeFilterSensitiveLog = exports.DoubleRangeFilterSensitiveLog = exports.DescribeValidDBInstanceModificationsMessageFilterSensitiveLog = exports.PendingMaintenanceActionsMessageFilterSensitiveLog = exports.DescribePendingMaintenanceActionsMessageFilterSensitiveLog = exports.OrderableDBInstanceOptionsMessageFilterSensitiveLog = exports.OrderableDBInstanceOptionFilterSensitiveLog = exports.DescribeOrderableDBInstanceOptionsMessageFilterSensitiveLog = exports.GlobalClustersMessageFilterSensitiveLog = exports.DescribeGlobalClustersMessageFilterSensitiveLog = exports.EventSubscriptionsMessageFilterSensitiveLog = exports.DescribeEventSubscriptionsMessageFilterSensitiveLog = exports.EventsMessageFilterSensitiveLog = exports.EventFilterSensitiveLog = exports.DescribeEventsMessageFilterSensitiveLog = exports.EventCategoriesMessageFilterSensitiveLog = exports.EventCategoriesMapFilterSensitiveLog = exports.DescribeEventCategoriesMessageFilterSensitiveLog = exports.DescribeEngineDefaultParametersResultFilterSensitiveLog = exports.DescribeEngineDefaultParametersMessageFilterSensitiveLog = exports.DescribeEngineDefaultClusterParametersResultFilterSensitiveLog = exports.EngineDefaultsFilterSensitiveLog = exports.DescribeEngineDefaultClusterParametersMessageFilterSensitiveLog = exports.DescribeDBSubnetGroupsMessageFilterSensitiveLog = exports.DBSubnetGroupMessageFilterSensitiveLog = exports.DescribeDBParametersMessageFilterSensitiveLog = exports.DBParameterGroupDetailsFilterSensitiveLog = exports.DescribeDBParameterGroupsMessageFilterSensitiveLog = exports.DBParameterGroupsMessageFilterSensitiveLog = exports.DescribeDBInstancesMessageFilterSensitiveLog = exports.DBInstanceMessageFilterSensitiveLog = exports.DescribeDBEngineVersionsMessageFilterSensitiveLog = exports.DBEngineVersionMessageFilterSensitiveLog = exports.DBEngineVersionFilterSensitiveLog = exports.UpgradeTargetFilterSensitiveLog = exports.TimezoneFilterSensitiveLog = exports.CharacterSetFilterSensitiveLog = exports.DescribeDBClusterSnapshotsMessageFilterSensitiveLog = exports.DBClusterSnapshotMessageFilterSensitiveLog = exports.DescribeDBClusterSnapshotAttributesResultFilterSensitiveLog = exports.DBClusterSnapshotAttributesResultFilterSensitiveLog = exports.DBClusterSnapshotAttributeFilterSensitiveLog = void 0;
exports.StopDBClusterResultFilterSensitiveLog = exports.StopDBClusterMessageFilterSensitiveLog = exports.StartDBClusterResultFilterSensitiveLog = exports.StartDBClusterMessageFilterSensitiveLog = exports.RestoreDBClusterToPointInTimeResultFilterSensitiveLog = exports.RestoreDBClusterToPointInTimeMessageFilterSensitiveLog = exports.RestoreDBClusterFromSnapshotResultFilterSensitiveLog = exports.RestoreDBClusterFromSnapshotMessageFilterSensitiveLog = exports.ResetDBParameterGroupMessageFilterSensitiveLog = exports.ResetDBClusterParameterGroupMessageFilterSensitiveLog = exports.RemoveTagsFromResourceMessageFilterSensitiveLog = exports.RemoveSourceIdentifierFromSubscriptionResultFilterSensitiveLog = exports.RemoveSourceIdentifierFromSubscriptionMessageFilterSensitiveLog = exports.RemoveRoleFromDBClusterMessageFilterSensitiveLog = exports.RemoveFromGlobalClusterResultFilterSensitiveLog = exports.RemoveFromGlobalClusterMessageFilterSensitiveLog = exports.RebootDBInstanceResultFilterSensitiveLog = exports.RebootDBInstanceMessageFilterSensitiveLog = exports.PromoteReadReplicaDBClusterResultFilterSensitiveLog = exports.PromoteReadReplicaDBClusterMessageFilterSensitiveLog = exports.ModifyGlobalClusterResultFilterSensitiveLog = exports.ModifyGlobalClusterMessageFilterSensitiveLog = exports.ModifyEventSubscriptionResultFilterSensitiveLog = exports.ModifyEventSubscriptionMessageFilterSensitiveLog = exports.ModifyDBSubnetGroupResultFilterSensitiveLog = exports.ModifyDBSubnetGroupMessageFilterSensitiveLog = exports.ModifyDBParameterGroupMessageFilterSensitiveLog = exports.DBParameterGroupNameMessageFilterSensitiveLog = exports.ModifyDBInstanceResultFilterSensitiveLog = exports.ModifyDBInstanceMessageFilterSensitiveLog = exports.ModifyDBClusterSnapshotAttributeResultFilterSensitiveLog = exports.ModifyDBClusterSnapshotAttributeMessageFilterSensitiveLog = exports.ModifyDBClusterParameterGroupMessageFilterSensitiveLog = exports.DBClusterParameterGroupNameMessageFilterSensitiveLog = exports.ModifyDBClusterEndpointOutputFilterSensitiveLog = exports.ModifyDBClusterEndpointMessageFilterSensitiveLog = exports.ModifyDBClusterResultFilterSensitiveLog = exports.ModifyDBClusterMessageFilterSensitiveLog = exports.CloudwatchLogsExportConfigurationFilterSensitiveLog = exports.TagListMessageFilterSensitiveLog = void 0;
const NeptuneServiceException_1 = require("./NeptuneServiceException");
class DBClusterNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterNotFoundFault.prototype);
    }
}
exports.DBClusterNotFoundFault = DBClusterNotFoundFault;
class DBClusterRoleAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterRoleAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterRoleAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterRoleAlreadyExistsFault.prototype);
    }
}
exports.DBClusterRoleAlreadyExistsFault = DBClusterRoleAlreadyExistsFault;
class DBClusterRoleQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterRoleQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterRoleQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterRoleQuotaExceededFault.prototype);
    }
}
exports.DBClusterRoleQuotaExceededFault = DBClusterRoleQuotaExceededFault;
class InvalidDBClusterStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBClusterStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBClusterStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBClusterStateFault.prototype);
    }
}
exports.InvalidDBClusterStateFault = InvalidDBClusterStateFault;
class SourceNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SourceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SourceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SourceNotFoundFault.prototype);
    }
}
exports.SourceNotFoundFault = SourceNotFoundFault;
class SubscriptionNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionNotFoundFault.prototype);
    }
}
exports.SubscriptionNotFoundFault = SubscriptionNotFoundFault;
class DBInstanceNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBInstanceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBInstanceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBInstanceNotFoundFault.prototype);
    }
}
exports.DBInstanceNotFoundFault = DBInstanceNotFoundFault;
class DBSnapshotNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSnapshotNotFoundFault.prototype);
    }
}
exports.DBSnapshotNotFoundFault = DBSnapshotNotFoundFault;
class ResourceNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundFault.prototype);
    }
}
exports.ResourceNotFoundFault = ResourceNotFoundFault;
class DBParameterGroupAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBParameterGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBParameterGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBParameterGroupAlreadyExistsFault.prototype);
    }
}
exports.DBParameterGroupAlreadyExistsFault = DBParameterGroupAlreadyExistsFault;
class DBParameterGroupNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBParameterGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBParameterGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBParameterGroupNotFoundFault.prototype);
    }
}
exports.DBParameterGroupNotFoundFault = DBParameterGroupNotFoundFault;
class DBParameterGroupQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBParameterGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBParameterGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBParameterGroupQuotaExceededFault.prototype);
    }
}
exports.DBParameterGroupQuotaExceededFault = DBParameterGroupQuotaExceededFault;
class DBClusterSnapshotAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterSnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterSnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterSnapshotAlreadyExistsFault.prototype);
    }
}
exports.DBClusterSnapshotAlreadyExistsFault = DBClusterSnapshotAlreadyExistsFault;
class DBClusterSnapshotNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterSnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterSnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterSnapshotNotFoundFault.prototype);
    }
}
exports.DBClusterSnapshotNotFoundFault = DBClusterSnapshotNotFoundFault;
class InvalidDBClusterSnapshotStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBClusterSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBClusterSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBClusterSnapshotStateFault.prototype);
    }
}
exports.InvalidDBClusterSnapshotStateFault = InvalidDBClusterSnapshotStateFault;
class KMSKeyNotAccessibleFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "KMSKeyNotAccessibleFault",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSKeyNotAccessibleFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSKeyNotAccessibleFault.prototype);
    }
}
exports.KMSKeyNotAccessibleFault = KMSKeyNotAccessibleFault;
class SnapshotQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotQuotaExceededFault.prototype);
    }
}
exports.SnapshotQuotaExceededFault = SnapshotQuotaExceededFault;
class DBClusterAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterAlreadyExistsFault.prototype);
    }
}
exports.DBClusterAlreadyExistsFault = DBClusterAlreadyExistsFault;
class DBClusterParameterGroupNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterParameterGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterParameterGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterParameterGroupNotFoundFault.prototype);
    }
}
exports.DBClusterParameterGroupNotFoundFault = DBClusterParameterGroupNotFoundFault;
class DBClusterQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterQuotaExceededFault.prototype);
    }
}
exports.DBClusterQuotaExceededFault = DBClusterQuotaExceededFault;
class DBSubnetGroupDoesNotCoverEnoughAZs extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupDoesNotCoverEnoughAZs",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupDoesNotCoverEnoughAZs";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupDoesNotCoverEnoughAZs.prototype);
    }
}
exports.DBSubnetGroupDoesNotCoverEnoughAZs = DBSubnetGroupDoesNotCoverEnoughAZs;
class DBSubnetGroupNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupNotFoundFault.prototype);
    }
}
exports.DBSubnetGroupNotFoundFault = DBSubnetGroupNotFoundFault;
class GlobalClusterNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "GlobalClusterNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalClusterNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalClusterNotFoundFault.prototype);
    }
}
exports.GlobalClusterNotFoundFault = GlobalClusterNotFoundFault;
class InsufficientStorageClusterCapacityFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InsufficientStorageClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientStorageClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientStorageClusterCapacityFault.prototype);
    }
}
exports.InsufficientStorageClusterCapacityFault = InsufficientStorageClusterCapacityFault;
class InvalidDBInstanceStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBInstanceStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBInstanceStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBInstanceStateFault.prototype);
    }
}
exports.InvalidDBInstanceStateFault = InvalidDBInstanceStateFault;
class InvalidDBSubnetGroupStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBSubnetGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSubnetGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSubnetGroupStateFault.prototype);
    }
}
exports.InvalidDBSubnetGroupStateFault = InvalidDBSubnetGroupStateFault;
class InvalidGlobalClusterStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidGlobalClusterStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidGlobalClusterStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidGlobalClusterStateFault.prototype);
    }
}
exports.InvalidGlobalClusterStateFault = InvalidGlobalClusterStateFault;
class InvalidSubnet extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidSubnet",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSubnet";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSubnet.prototype);
    }
}
exports.InvalidSubnet = InvalidSubnet;
class InvalidVPCNetworkStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidVPCNetworkStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidVPCNetworkStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidVPCNetworkStateFault.prototype);
    }
}
exports.InvalidVPCNetworkStateFault = InvalidVPCNetworkStateFault;
class StorageQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "StorageQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "StorageQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, StorageQuotaExceededFault.prototype);
    }
}
exports.StorageQuotaExceededFault = StorageQuotaExceededFault;
class DBClusterEndpointAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterEndpointAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterEndpointAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterEndpointAlreadyExistsFault.prototype);
    }
}
exports.DBClusterEndpointAlreadyExistsFault = DBClusterEndpointAlreadyExistsFault;
class DBClusterEndpointQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterEndpointQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterEndpointQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterEndpointQuotaExceededFault.prototype);
    }
}
exports.DBClusterEndpointQuotaExceededFault = DBClusterEndpointQuotaExceededFault;
class AuthorizationNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "AuthorizationNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthorizationNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthorizationNotFoundFault.prototype);
    }
}
exports.AuthorizationNotFoundFault = AuthorizationNotFoundFault;
class DBInstanceAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBInstanceAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBInstanceAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBInstanceAlreadyExistsFault.prototype);
    }
}
exports.DBInstanceAlreadyExistsFault = DBInstanceAlreadyExistsFault;
class DBSecurityGroupNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSecurityGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSecurityGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSecurityGroupNotFoundFault.prototype);
    }
}
exports.DBSecurityGroupNotFoundFault = DBSecurityGroupNotFoundFault;
class DomainNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DomainNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DomainNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DomainNotFoundFault.prototype);
    }
}
exports.DomainNotFoundFault = DomainNotFoundFault;
class InstanceQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InstanceQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InstanceQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InstanceQuotaExceededFault.prototype);
    }
}
exports.InstanceQuotaExceededFault = InstanceQuotaExceededFault;
class InsufficientDBInstanceCapacityFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InsufficientDBInstanceCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientDBInstanceCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientDBInstanceCapacityFault.prototype);
    }
}
exports.InsufficientDBInstanceCapacityFault = InsufficientDBInstanceCapacityFault;
class OptionGroupNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "OptionGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "OptionGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, OptionGroupNotFoundFault.prototype);
    }
}
exports.OptionGroupNotFoundFault = OptionGroupNotFoundFault;
class ProvisionedIopsNotAvailableInAZFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "ProvisionedIopsNotAvailableInAZFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ProvisionedIopsNotAvailableInAZFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ProvisionedIopsNotAvailableInAZFault.prototype);
    }
}
exports.ProvisionedIopsNotAvailableInAZFault = ProvisionedIopsNotAvailableInAZFault;
class StorageTypeNotSupportedFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "StorageTypeNotSupportedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "StorageTypeNotSupportedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, StorageTypeNotSupportedFault.prototype);
    }
}
exports.StorageTypeNotSupportedFault = StorageTypeNotSupportedFault;
class DBSubnetGroupAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupAlreadyExistsFault.prototype);
    }
}
exports.DBSubnetGroupAlreadyExistsFault = DBSubnetGroupAlreadyExistsFault;
class DBSubnetGroupQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSubnetGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetGroupQuotaExceededFault.prototype);
    }
}
exports.DBSubnetGroupQuotaExceededFault = DBSubnetGroupQuotaExceededFault;
class DBSubnetQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSubnetQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSubnetQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSubnetQuotaExceededFault.prototype);
    }
}
exports.DBSubnetQuotaExceededFault = DBSubnetQuotaExceededFault;
class EventSubscriptionQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "EventSubscriptionQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EventSubscriptionQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EventSubscriptionQuotaExceededFault.prototype);
    }
}
exports.EventSubscriptionQuotaExceededFault = EventSubscriptionQuotaExceededFault;
class SNSInvalidTopicFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SNSInvalidTopicFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSInvalidTopicFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSInvalidTopicFault.prototype);
    }
}
exports.SNSInvalidTopicFault = SNSInvalidTopicFault;
class SNSNoAuthorizationFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SNSNoAuthorizationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSNoAuthorizationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSNoAuthorizationFault.prototype);
    }
}
exports.SNSNoAuthorizationFault = SNSNoAuthorizationFault;
class SNSTopicArnNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SNSTopicArnNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSTopicArnNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSTopicArnNotFoundFault.prototype);
    }
}
exports.SNSTopicArnNotFoundFault = SNSTopicArnNotFoundFault;
class SubscriptionAlreadyExistFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionAlreadyExistFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionAlreadyExistFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionAlreadyExistFault.prototype);
    }
}
exports.SubscriptionAlreadyExistFault = SubscriptionAlreadyExistFault;
class SubscriptionCategoryNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionCategoryNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionCategoryNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionCategoryNotFoundFault.prototype);
    }
}
exports.SubscriptionCategoryNotFoundFault = SubscriptionCategoryNotFoundFault;
class GlobalClusterAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "GlobalClusterAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalClusterAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalClusterAlreadyExistsFault.prototype);
    }
}
exports.GlobalClusterAlreadyExistsFault = GlobalClusterAlreadyExistsFault;
class GlobalClusterQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "GlobalClusterQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalClusterQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalClusterQuotaExceededFault.prototype);
    }
}
exports.GlobalClusterQuotaExceededFault = GlobalClusterQuotaExceededFault;
class DBClusterEndpointNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterEndpointNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterEndpointNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterEndpointNotFoundFault.prototype);
    }
}
exports.DBClusterEndpointNotFoundFault = DBClusterEndpointNotFoundFault;
class InvalidDBClusterEndpointStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBClusterEndpointStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBClusterEndpointStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBClusterEndpointStateFault.prototype);
    }
}
exports.InvalidDBClusterEndpointStateFault = InvalidDBClusterEndpointStateFault;
class InvalidDBParameterGroupStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBParameterGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBParameterGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBParameterGroupStateFault.prototype);
    }
}
exports.InvalidDBParameterGroupStateFault = InvalidDBParameterGroupStateFault;
class DBSnapshotAlreadyExistsFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBSnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBSnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBSnapshotAlreadyExistsFault.prototype);
    }
}
exports.DBSnapshotAlreadyExistsFault = DBSnapshotAlreadyExistsFault;
class InvalidDBSubnetStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBSubnetStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSubnetStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSubnetStateFault.prototype);
    }
}
exports.InvalidDBSubnetStateFault = InvalidDBSubnetStateFault;
class InvalidEventSubscriptionStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidEventSubscriptionStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEventSubscriptionStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEventSubscriptionStateFault.prototype);
    }
}
exports.InvalidEventSubscriptionStateFault = InvalidEventSubscriptionStateFault;
class InvalidDBSecurityGroupStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBSecurityGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSecurityGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSecurityGroupStateFault.prototype);
    }
}
exports.InvalidDBSecurityGroupStateFault = InvalidDBSecurityGroupStateFault;
class SharedSnapshotQuotaExceededFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SharedSnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SharedSnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SharedSnapshotQuotaExceededFault.prototype);
    }
}
exports.SharedSnapshotQuotaExceededFault = SharedSnapshotQuotaExceededFault;
class CertificateNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "CertificateNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateNotFoundFault.prototype);
    }
}
exports.CertificateNotFoundFault = CertificateNotFoundFault;
class DBUpgradeDependencyFailureFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBUpgradeDependencyFailureFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBUpgradeDependencyFailureFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBUpgradeDependencyFailureFault.prototype);
    }
}
exports.DBUpgradeDependencyFailureFault = DBUpgradeDependencyFailureFault;
class SubnetAlreadyInUse extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "SubnetAlreadyInUse",
            $fault: "client",
            ...opts,
        });
        this.name = "SubnetAlreadyInUse";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubnetAlreadyInUse.prototype);
    }
}
exports.SubnetAlreadyInUse = SubnetAlreadyInUse;
class DBClusterRoleNotFoundFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "DBClusterRoleNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DBClusterRoleNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DBClusterRoleNotFoundFault.prototype);
    }
}
exports.DBClusterRoleNotFoundFault = DBClusterRoleNotFoundFault;
class InsufficientDBClusterCapacityFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InsufficientDBClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientDBClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientDBClusterCapacityFault.prototype);
    }
}
exports.InsufficientDBClusterCapacityFault = InsufficientDBClusterCapacityFault;
class InvalidDBSnapshotStateFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidDBSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDBSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDBSnapshotStateFault.prototype);
    }
}
exports.InvalidDBSnapshotStateFault = InvalidDBSnapshotStateFault;
class InvalidRestoreFault extends NeptuneServiceException_1.NeptuneServiceException {
    constructor(opts) {
        super({
            name: "InvalidRestoreFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRestoreFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRestoreFault.prototype);
    }
}
exports.InvalidRestoreFault = InvalidRestoreFault;
const AddRoleToDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddRoleToDBClusterMessageFilterSensitiveLog = AddRoleToDBClusterMessageFilterSensitiveLog;
const AddSourceIdentifierToSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddSourceIdentifierToSubscriptionMessageFilterSensitiveLog = AddSourceIdentifierToSubscriptionMessageFilterSensitiveLog;
const EventSubscriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventSubscriptionFilterSensitiveLog = EventSubscriptionFilterSensitiveLog;
const AddSourceIdentifierToSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddSourceIdentifierToSubscriptionResultFilterSensitiveLog = AddSourceIdentifierToSubscriptionResultFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const AddTagsToResourceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddTagsToResourceMessageFilterSensitiveLog = AddTagsToResourceMessageFilterSensitiveLog;
const ApplyPendingMaintenanceActionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ApplyPendingMaintenanceActionMessageFilterSensitiveLog = ApplyPendingMaintenanceActionMessageFilterSensitiveLog;
const PendingMaintenanceActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PendingMaintenanceActionFilterSensitiveLog = PendingMaintenanceActionFilterSensitiveLog;
const ResourcePendingMaintenanceActionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourcePendingMaintenanceActionsFilterSensitiveLog = ResourcePendingMaintenanceActionsFilterSensitiveLog;
const ApplyPendingMaintenanceActionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ApplyPendingMaintenanceActionResultFilterSensitiveLog = ApplyPendingMaintenanceActionResultFilterSensitiveLog;
const CopyDBClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyDBClusterParameterGroupMessageFilterSensitiveLog = CopyDBClusterParameterGroupMessageFilterSensitiveLog;
const DBClusterParameterGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterParameterGroupFilterSensitiveLog = DBClusterParameterGroupFilterSensitiveLog;
const CopyDBClusterParameterGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyDBClusterParameterGroupResultFilterSensitiveLog = CopyDBClusterParameterGroupResultFilterSensitiveLog;
const CopyDBClusterSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyDBClusterSnapshotMessageFilterSensitiveLog = CopyDBClusterSnapshotMessageFilterSensitiveLog;
const DBClusterSnapshotFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterSnapshotFilterSensitiveLog = DBClusterSnapshotFilterSensitiveLog;
const CopyDBClusterSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyDBClusterSnapshotResultFilterSensitiveLog = CopyDBClusterSnapshotResultFilterSensitiveLog;
const CopyDBParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyDBParameterGroupMessageFilterSensitiveLog = CopyDBParameterGroupMessageFilterSensitiveLog;
const DBParameterGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBParameterGroupFilterSensitiveLog = DBParameterGroupFilterSensitiveLog;
const CopyDBParameterGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyDBParameterGroupResultFilterSensitiveLog = CopyDBParameterGroupResultFilterSensitiveLog;
const CreateDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterMessageFilterSensitiveLog = CreateDBClusterMessageFilterSensitiveLog;
const DBClusterRoleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterRoleFilterSensitiveLog = DBClusterRoleFilterSensitiveLog;
const DBClusterMemberFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterMemberFilterSensitiveLog = DBClusterMemberFilterSensitiveLog;
const DBClusterOptionGroupStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterOptionGroupStatusFilterSensitiveLog = DBClusterOptionGroupStatusFilterSensitiveLog;
const VpcSecurityGroupMembershipFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcSecurityGroupMembershipFilterSensitiveLog = VpcSecurityGroupMembershipFilterSensitiveLog;
const DBClusterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterFilterSensitiveLog = DBClusterFilterSensitiveLog;
const CreateDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterResultFilterSensitiveLog = CreateDBClusterResultFilterSensitiveLog;
const CreateDBClusterEndpointMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterEndpointMessageFilterSensitiveLog = CreateDBClusterEndpointMessageFilterSensitiveLog;
const CreateDBClusterEndpointOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterEndpointOutputFilterSensitiveLog = CreateDBClusterEndpointOutputFilterSensitiveLog;
const CreateDBClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterParameterGroupMessageFilterSensitiveLog = CreateDBClusterParameterGroupMessageFilterSensitiveLog;
const CreateDBClusterParameterGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterParameterGroupResultFilterSensitiveLog = CreateDBClusterParameterGroupResultFilterSensitiveLog;
const CreateDBClusterSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterSnapshotMessageFilterSensitiveLog = CreateDBClusterSnapshotMessageFilterSensitiveLog;
const CreateDBClusterSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBClusterSnapshotResultFilterSensitiveLog = CreateDBClusterSnapshotResultFilterSensitiveLog;
const CreateDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBInstanceMessageFilterSensitiveLog = CreateDBInstanceMessageFilterSensitiveLog;
const DBParameterGroupStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBParameterGroupStatusFilterSensitiveLog = DBParameterGroupStatusFilterSensitiveLog;
const DBSecurityGroupMembershipFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBSecurityGroupMembershipFilterSensitiveLog = DBSecurityGroupMembershipFilterSensitiveLog;
const AvailabilityZoneFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AvailabilityZoneFilterSensitiveLog = AvailabilityZoneFilterSensitiveLog;
const SubnetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubnetFilterSensitiveLog = SubnetFilterSensitiveLog;
const DBSubnetGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBSubnetGroupFilterSensitiveLog = DBSubnetGroupFilterSensitiveLog;
const DomainMembershipFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DomainMembershipFilterSensitiveLog = DomainMembershipFilterSensitiveLog;
const EndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointFilterSensitiveLog = EndpointFilterSensitiveLog;
const OptionGroupMembershipFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OptionGroupMembershipFilterSensitiveLog = OptionGroupMembershipFilterSensitiveLog;
const PendingCloudwatchLogsExportsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PendingCloudwatchLogsExportsFilterSensitiveLog = PendingCloudwatchLogsExportsFilterSensitiveLog;
const PendingModifiedValuesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PendingModifiedValuesFilterSensitiveLog = PendingModifiedValuesFilterSensitiveLog;
const DBInstanceStatusInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBInstanceStatusInfoFilterSensitiveLog = DBInstanceStatusInfoFilterSensitiveLog;
const DBInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBInstanceFilterSensitiveLog = DBInstanceFilterSensitiveLog;
const CreateDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBInstanceResultFilterSensitiveLog = CreateDBInstanceResultFilterSensitiveLog;
const CreateDBParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBParameterGroupMessageFilterSensitiveLog = CreateDBParameterGroupMessageFilterSensitiveLog;
const CreateDBParameterGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBParameterGroupResultFilterSensitiveLog = CreateDBParameterGroupResultFilterSensitiveLog;
const CreateDBSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBSubnetGroupMessageFilterSensitiveLog = CreateDBSubnetGroupMessageFilterSensitiveLog;
const CreateDBSubnetGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDBSubnetGroupResultFilterSensitiveLog = CreateDBSubnetGroupResultFilterSensitiveLog;
const CreateEventSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateEventSubscriptionMessageFilterSensitiveLog = CreateEventSubscriptionMessageFilterSensitiveLog;
const CreateEventSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateEventSubscriptionResultFilterSensitiveLog = CreateEventSubscriptionResultFilterSensitiveLog;
const CreateGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateGlobalClusterMessageFilterSensitiveLog = CreateGlobalClusterMessageFilterSensitiveLog;
const GlobalClusterMemberFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalClusterMemberFilterSensitiveLog = GlobalClusterMemberFilterSensitiveLog;
const GlobalClusterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalClusterFilterSensitiveLog = GlobalClusterFilterSensitiveLog;
const CreateGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateGlobalClusterResultFilterSensitiveLog = CreateGlobalClusterResultFilterSensitiveLog;
const DeleteDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBClusterMessageFilterSensitiveLog = DeleteDBClusterMessageFilterSensitiveLog;
const DeleteDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBClusterResultFilterSensitiveLog = DeleteDBClusterResultFilterSensitiveLog;
const DeleteDBClusterEndpointMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBClusterEndpointMessageFilterSensitiveLog = DeleteDBClusterEndpointMessageFilterSensitiveLog;
const DeleteDBClusterEndpointOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBClusterEndpointOutputFilterSensitiveLog = DeleteDBClusterEndpointOutputFilterSensitiveLog;
const DeleteDBClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBClusterParameterGroupMessageFilterSensitiveLog = DeleteDBClusterParameterGroupMessageFilterSensitiveLog;
const DeleteDBClusterSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBClusterSnapshotMessageFilterSensitiveLog = DeleteDBClusterSnapshotMessageFilterSensitiveLog;
const DeleteDBClusterSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBClusterSnapshotResultFilterSensitiveLog = DeleteDBClusterSnapshotResultFilterSensitiveLog;
const DeleteDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBInstanceMessageFilterSensitiveLog = DeleteDBInstanceMessageFilterSensitiveLog;
const DeleteDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBInstanceResultFilterSensitiveLog = DeleteDBInstanceResultFilterSensitiveLog;
const DeleteDBParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBParameterGroupMessageFilterSensitiveLog = DeleteDBParameterGroupMessageFilterSensitiveLog;
const DeleteDBSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDBSubnetGroupMessageFilterSensitiveLog = DeleteDBSubnetGroupMessageFilterSensitiveLog;
const DeleteEventSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteEventSubscriptionMessageFilterSensitiveLog = DeleteEventSubscriptionMessageFilterSensitiveLog;
const DeleteEventSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteEventSubscriptionResultFilterSensitiveLog = DeleteEventSubscriptionResultFilterSensitiveLog;
const DeleteGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteGlobalClusterMessageFilterSensitiveLog = DeleteGlobalClusterMessageFilterSensitiveLog;
const DeleteGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteGlobalClusterResultFilterSensitiveLog = DeleteGlobalClusterResultFilterSensitiveLog;
const DBClusterEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterEndpointFilterSensitiveLog = DBClusterEndpointFilterSensitiveLog;
const DBClusterEndpointMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterEndpointMessageFilterSensitiveLog = DBClusterEndpointMessageFilterSensitiveLog;
const FilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FilterFilterSensitiveLog = FilterFilterSensitiveLog;
const DescribeDBClusterEndpointsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBClusterEndpointsMessageFilterSensitiveLog = DescribeDBClusterEndpointsMessageFilterSensitiveLog;
const DBClusterParameterGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterParameterGroupsMessageFilterSensitiveLog = DBClusterParameterGroupsMessageFilterSensitiveLog;
const DescribeDBClusterParameterGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBClusterParameterGroupsMessageFilterSensitiveLog = DescribeDBClusterParameterGroupsMessageFilterSensitiveLog;
const ParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ParameterFilterSensitiveLog = ParameterFilterSensitiveLog;
const DBClusterParameterGroupDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterParameterGroupDetailsFilterSensitiveLog = DBClusterParameterGroupDetailsFilterSensitiveLog;
const DescribeDBClusterParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBClusterParametersMessageFilterSensitiveLog = DescribeDBClusterParametersMessageFilterSensitiveLog;
const DBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterMessageFilterSensitiveLog = DBClusterMessageFilterSensitiveLog;
const DescribeDBClustersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBClustersMessageFilterSensitiveLog = DescribeDBClustersMessageFilterSensitiveLog;
const DescribeDBClusterSnapshotAttributesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBClusterSnapshotAttributesMessageFilterSensitiveLog = DescribeDBClusterSnapshotAttributesMessageFilterSensitiveLog;
const DBClusterSnapshotAttributeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterSnapshotAttributeFilterSensitiveLog = DBClusterSnapshotAttributeFilterSensitiveLog;
const DBClusterSnapshotAttributesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterSnapshotAttributesResultFilterSensitiveLog = DBClusterSnapshotAttributesResultFilterSensitiveLog;
const DescribeDBClusterSnapshotAttributesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBClusterSnapshotAttributesResultFilterSensitiveLog = DescribeDBClusterSnapshotAttributesResultFilterSensitiveLog;
const DBClusterSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterSnapshotMessageFilterSensitiveLog = DBClusterSnapshotMessageFilterSensitiveLog;
const DescribeDBClusterSnapshotsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBClusterSnapshotsMessageFilterSensitiveLog = DescribeDBClusterSnapshotsMessageFilterSensitiveLog;
const CharacterSetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CharacterSetFilterSensitiveLog = CharacterSetFilterSensitiveLog;
const TimezoneFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimezoneFilterSensitiveLog = TimezoneFilterSensitiveLog;
const UpgradeTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpgradeTargetFilterSensitiveLog = UpgradeTargetFilterSensitiveLog;
const DBEngineVersionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBEngineVersionFilterSensitiveLog = DBEngineVersionFilterSensitiveLog;
const DBEngineVersionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBEngineVersionMessageFilterSensitiveLog = DBEngineVersionMessageFilterSensitiveLog;
const DescribeDBEngineVersionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBEngineVersionsMessageFilterSensitiveLog = DescribeDBEngineVersionsMessageFilterSensitiveLog;
const DBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBInstanceMessageFilterSensitiveLog = DBInstanceMessageFilterSensitiveLog;
const DescribeDBInstancesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBInstancesMessageFilterSensitiveLog = DescribeDBInstancesMessageFilterSensitiveLog;
const DBParameterGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBParameterGroupsMessageFilterSensitiveLog = DBParameterGroupsMessageFilterSensitiveLog;
const DescribeDBParameterGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBParameterGroupsMessageFilterSensitiveLog = DescribeDBParameterGroupsMessageFilterSensitiveLog;
const DBParameterGroupDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBParameterGroupDetailsFilterSensitiveLog = DBParameterGroupDetailsFilterSensitiveLog;
const DescribeDBParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBParametersMessageFilterSensitiveLog = DescribeDBParametersMessageFilterSensitiveLog;
const DBSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBSubnetGroupMessageFilterSensitiveLog = DBSubnetGroupMessageFilterSensitiveLog;
const DescribeDBSubnetGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDBSubnetGroupsMessageFilterSensitiveLog = DescribeDBSubnetGroupsMessageFilterSensitiveLog;
const DescribeEngineDefaultClusterParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEngineDefaultClusterParametersMessageFilterSensitiveLog = DescribeEngineDefaultClusterParametersMessageFilterSensitiveLog;
const EngineDefaultsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EngineDefaultsFilterSensitiveLog = EngineDefaultsFilterSensitiveLog;
const DescribeEngineDefaultClusterParametersResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEngineDefaultClusterParametersResultFilterSensitiveLog = DescribeEngineDefaultClusterParametersResultFilterSensitiveLog;
const DescribeEngineDefaultParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEngineDefaultParametersMessageFilterSensitiveLog = DescribeEngineDefaultParametersMessageFilterSensitiveLog;
const DescribeEngineDefaultParametersResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEngineDefaultParametersResultFilterSensitiveLog = DescribeEngineDefaultParametersResultFilterSensitiveLog;
const DescribeEventCategoriesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEventCategoriesMessageFilterSensitiveLog = DescribeEventCategoriesMessageFilterSensitiveLog;
const EventCategoriesMapFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventCategoriesMapFilterSensitiveLog = EventCategoriesMapFilterSensitiveLog;
const EventCategoriesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventCategoriesMessageFilterSensitiveLog = EventCategoriesMessageFilterSensitiveLog;
const DescribeEventsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEventsMessageFilterSensitiveLog = DescribeEventsMessageFilterSensitiveLog;
const EventFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventFilterSensitiveLog = EventFilterSensitiveLog;
const EventsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventsMessageFilterSensitiveLog = EventsMessageFilterSensitiveLog;
const DescribeEventSubscriptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEventSubscriptionsMessageFilterSensitiveLog = DescribeEventSubscriptionsMessageFilterSensitiveLog;
const EventSubscriptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventSubscriptionsMessageFilterSensitiveLog = EventSubscriptionsMessageFilterSensitiveLog;
const DescribeGlobalClustersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeGlobalClustersMessageFilterSensitiveLog = DescribeGlobalClustersMessageFilterSensitiveLog;
const GlobalClustersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalClustersMessageFilterSensitiveLog = GlobalClustersMessageFilterSensitiveLog;
const DescribeOrderableDBInstanceOptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeOrderableDBInstanceOptionsMessageFilterSensitiveLog = DescribeOrderableDBInstanceOptionsMessageFilterSensitiveLog;
const OrderableDBInstanceOptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OrderableDBInstanceOptionFilterSensitiveLog = OrderableDBInstanceOptionFilterSensitiveLog;
const OrderableDBInstanceOptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OrderableDBInstanceOptionsMessageFilterSensitiveLog = OrderableDBInstanceOptionsMessageFilterSensitiveLog;
const DescribePendingMaintenanceActionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribePendingMaintenanceActionsMessageFilterSensitiveLog = DescribePendingMaintenanceActionsMessageFilterSensitiveLog;
const PendingMaintenanceActionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PendingMaintenanceActionsMessageFilterSensitiveLog = PendingMaintenanceActionsMessageFilterSensitiveLog;
const DescribeValidDBInstanceModificationsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeValidDBInstanceModificationsMessageFilterSensitiveLog = DescribeValidDBInstanceModificationsMessageFilterSensitiveLog;
const DoubleRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DoubleRangeFilterSensitiveLog = DoubleRangeFilterSensitiveLog;
const RangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RangeFilterSensitiveLog = RangeFilterSensitiveLog;
const ValidStorageOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ValidStorageOptionsFilterSensitiveLog = ValidStorageOptionsFilterSensitiveLog;
const ValidDBInstanceModificationsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ValidDBInstanceModificationsMessageFilterSensitiveLog = ValidDBInstanceModificationsMessageFilterSensitiveLog;
const DescribeValidDBInstanceModificationsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeValidDBInstanceModificationsResultFilterSensitiveLog = DescribeValidDBInstanceModificationsResultFilterSensitiveLog;
const FailoverDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailoverDBClusterMessageFilterSensitiveLog = FailoverDBClusterMessageFilterSensitiveLog;
const FailoverDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailoverDBClusterResultFilterSensitiveLog = FailoverDBClusterResultFilterSensitiveLog;
const FailoverGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailoverGlobalClusterMessageFilterSensitiveLog = FailoverGlobalClusterMessageFilterSensitiveLog;
const FailoverGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailoverGlobalClusterResultFilterSensitiveLog = FailoverGlobalClusterResultFilterSensitiveLog;
const ListTagsForResourceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsForResourceMessageFilterSensitiveLog = ListTagsForResourceMessageFilterSensitiveLog;
const TagListMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagListMessageFilterSensitiveLog = TagListMessageFilterSensitiveLog;
const CloudwatchLogsExportConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudwatchLogsExportConfigurationFilterSensitiveLog = CloudwatchLogsExportConfigurationFilterSensitiveLog;
const ModifyDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBClusterMessageFilterSensitiveLog = ModifyDBClusterMessageFilterSensitiveLog;
const ModifyDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBClusterResultFilterSensitiveLog = ModifyDBClusterResultFilterSensitiveLog;
const ModifyDBClusterEndpointMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBClusterEndpointMessageFilterSensitiveLog = ModifyDBClusterEndpointMessageFilterSensitiveLog;
const ModifyDBClusterEndpointOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBClusterEndpointOutputFilterSensitiveLog = ModifyDBClusterEndpointOutputFilterSensitiveLog;
const DBClusterParameterGroupNameMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBClusterParameterGroupNameMessageFilterSensitiveLog = DBClusterParameterGroupNameMessageFilterSensitiveLog;
const ModifyDBClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBClusterParameterGroupMessageFilterSensitiveLog = ModifyDBClusterParameterGroupMessageFilterSensitiveLog;
const ModifyDBClusterSnapshotAttributeMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBClusterSnapshotAttributeMessageFilterSensitiveLog = ModifyDBClusterSnapshotAttributeMessageFilterSensitiveLog;
const ModifyDBClusterSnapshotAttributeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBClusterSnapshotAttributeResultFilterSensitiveLog = ModifyDBClusterSnapshotAttributeResultFilterSensitiveLog;
const ModifyDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBInstanceMessageFilterSensitiveLog = ModifyDBInstanceMessageFilterSensitiveLog;
const ModifyDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBInstanceResultFilterSensitiveLog = ModifyDBInstanceResultFilterSensitiveLog;
const DBParameterGroupNameMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DBParameterGroupNameMessageFilterSensitiveLog = DBParameterGroupNameMessageFilterSensitiveLog;
const ModifyDBParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBParameterGroupMessageFilterSensitiveLog = ModifyDBParameterGroupMessageFilterSensitiveLog;
const ModifyDBSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBSubnetGroupMessageFilterSensitiveLog = ModifyDBSubnetGroupMessageFilterSensitiveLog;
const ModifyDBSubnetGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyDBSubnetGroupResultFilterSensitiveLog = ModifyDBSubnetGroupResultFilterSensitiveLog;
const ModifyEventSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyEventSubscriptionMessageFilterSensitiveLog = ModifyEventSubscriptionMessageFilterSensitiveLog;
const ModifyEventSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyEventSubscriptionResultFilterSensitiveLog = ModifyEventSubscriptionResultFilterSensitiveLog;
const ModifyGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyGlobalClusterMessageFilterSensitiveLog = ModifyGlobalClusterMessageFilterSensitiveLog;
const ModifyGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ModifyGlobalClusterResultFilterSensitiveLog = ModifyGlobalClusterResultFilterSensitiveLog;
const PromoteReadReplicaDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PromoteReadReplicaDBClusterMessageFilterSensitiveLog = PromoteReadReplicaDBClusterMessageFilterSensitiveLog;
const PromoteReadReplicaDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PromoteReadReplicaDBClusterResultFilterSensitiveLog = PromoteReadReplicaDBClusterResultFilterSensitiveLog;
const RebootDBInstanceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RebootDBInstanceMessageFilterSensitiveLog = RebootDBInstanceMessageFilterSensitiveLog;
const RebootDBInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RebootDBInstanceResultFilterSensitiveLog = RebootDBInstanceResultFilterSensitiveLog;
const RemoveFromGlobalClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveFromGlobalClusterMessageFilterSensitiveLog = RemoveFromGlobalClusterMessageFilterSensitiveLog;
const RemoveFromGlobalClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveFromGlobalClusterResultFilterSensitiveLog = RemoveFromGlobalClusterResultFilterSensitiveLog;
const RemoveRoleFromDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveRoleFromDBClusterMessageFilterSensitiveLog = RemoveRoleFromDBClusterMessageFilterSensitiveLog;
const RemoveSourceIdentifierFromSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveSourceIdentifierFromSubscriptionMessageFilterSensitiveLog = RemoveSourceIdentifierFromSubscriptionMessageFilterSensitiveLog;
const RemoveSourceIdentifierFromSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveSourceIdentifierFromSubscriptionResultFilterSensitiveLog = RemoveSourceIdentifierFromSubscriptionResultFilterSensitiveLog;
const RemoveTagsFromResourceMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RemoveTagsFromResourceMessageFilterSensitiveLog = RemoveTagsFromResourceMessageFilterSensitiveLog;
const ResetDBClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResetDBClusterParameterGroupMessageFilterSensitiveLog = ResetDBClusterParameterGroupMessageFilterSensitiveLog;
const ResetDBParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResetDBParameterGroupMessageFilterSensitiveLog = ResetDBParameterGroupMessageFilterSensitiveLog;
const RestoreDBClusterFromSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreDBClusterFromSnapshotMessageFilterSensitiveLog = RestoreDBClusterFromSnapshotMessageFilterSensitiveLog;
const RestoreDBClusterFromSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreDBClusterFromSnapshotResultFilterSensitiveLog = RestoreDBClusterFromSnapshotResultFilterSensitiveLog;
const RestoreDBClusterToPointInTimeMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreDBClusterToPointInTimeMessageFilterSensitiveLog = RestoreDBClusterToPointInTimeMessageFilterSensitiveLog;
const RestoreDBClusterToPointInTimeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreDBClusterToPointInTimeResultFilterSensitiveLog = RestoreDBClusterToPointInTimeResultFilterSensitiveLog;
const StartDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartDBClusterMessageFilterSensitiveLog = StartDBClusterMessageFilterSensitiveLog;
const StartDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartDBClusterResultFilterSensitiveLog = StartDBClusterResultFilterSensitiveLog;
const StopDBClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopDBClusterMessageFilterSensitiveLog = StopDBClusterMessageFilterSensitiveLog;
const StopDBClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StopDBClusterResultFilterSensitiveLog = StopDBClusterResultFilterSensitiveLog;
